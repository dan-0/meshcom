plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id "com.google.protobuf"
    id 'kotlin-parcelize'
    id 'kotlinx-serialization'
    id 'io.gitlab.arturbosch.detekt'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "me.danlowe.meshcommunicator"
        minSdk 26
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "me.danlowe.meshcommunicator.test.runner.HiltTestRunner"

        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = '11'
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion "1.3.0"
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    sourceSets {
        main {
            proto {
                // In addition to the default 'src/main/proto'
                srcDir 'src/main/protobuf'
                srcDir 'src/main/protocolbuffers'
                // In addition to the default '**/*.proto' (use with caution).
                // Using an extension other than 'proto' is NOT recommended,
                // because when proto files are published along with class files, we can
                // only tell the type of a file from its extension.
                include '**/*.protodevel'
            }
        }
        test {
            proto {
                // In addition to the default 'src/test/proto'
                srcDir 'src/test/protocolbuffers'
            }
        }
    }


    kapt {
        correctErrorTypes = true
    }

    testOptions {
        packagingOptions {
            jniLibs {
                // Required for mockk, see: https://github.com/mockk/mockk/issues/297#issuecomment-901924678
                useLegacyPackaging true
            }
        }
    }

    detekt {
        toolVersion = "1.21.0"
        config = files("config/detekt/detekt.yml")
        buildUponDefaultConfig = true
    }

}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.21.5"
    }

    plugins {
        javalite {
            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
        }
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}

dependencies {

    // Compose
    def compose_version = '1.2.1'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
    implementation "androidx.activity:activity-compose:1.5.1"
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"

    // Compose navigation
    implementation "androidx.navigation:navigation-compose:2.5.1"

    // Permissions
    implementation "com.google.accompanist:accompanist-permissions:0.25.0"

    // Core
    implementation "androidx.core:core-ktx:1.8.0"
    
    // Test
    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.1.3"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.4.0"

    // ViewModel
    def lifecycle_version = "2.5.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // Coroutines
    def coroutineVersion = "1.6.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutineVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:coroutineVersion"

    // Nearby
    implementation "com.google.android.gms:play-services-nearby:18.3.0"

    // Hilt
    def hiltVersion = "2.42"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-compiler:$hiltVersion"
    kaptTest "com.google.dagger:hilt-android-compiler:$hiltVersion"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hiltVersion"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hiltVersion"

    // Logging
    implementation "com.jakewharton.timber:timber:5.0.1"

    // DataStore
    implementation "androidx.datastore:datastore:1.0.0"

    // Protobuf
    implementation "com.google.protobuf:protobuf-javalite:3.20.1"

    // Room
    def roomVersion = "2.4.3"
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"

    // Serialization
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.0"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-protobuf:1.4.0"

    // Mockk
    def mockkVersion = "1.12.5"
    testImplementation "io.mockk:mockk:$mockkVersion"
    androidTestImplementation "io.mockk:mockk-android:$mockkVersion"
}